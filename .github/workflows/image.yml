name: Image
on:
  push:
    branches:
      - master
    paths:
      - Dockerfile
      - docker-entrypoint.sh
      - .github/workflows/image.yml
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64
    steps:
      # checkout
      - uses: actions/checkout@v3

      # setup qemu
      - uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      # setup docker metadata
      - uses: docker/metadata-action@v4
        id: metadata
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr

      # setup docker buildx
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          version: latest
          install: true

      # login to github container registry
      - uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # build & push image
      - uses: docker/build-push-action@v4
        id: build
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            SYNC_REPO=https://github.com/${{ github.repository }}
            SYNC_BRANCH=${{ github.ref_name }}

      # output image digest
      - name: Output image digest
        run: |
          echo ${{ steps.build.outputs.digest }}
  scan:
    name: Scan
    runs-on: ubuntu-latest
    steps:
      # login to docker hub
      - uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # scan image
      - uses: crazy-max/ghaction-container-scan@v2
        if: github.event_name != 'pull_request'
        id: scan
        with:
          image: ghcr.io/${{ github.repository }}:master
          annotations: true
